services:
  postgres_db:
    image: postgres:13.5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    container_name: postgres_db
    networks:
      - bridge_network
    volumes:
      - pg-data:/var/lib/postgresql/data

  db_migrate:
    build:
      context: ./db-migrate
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    container_name: db_migrate
    networks:
      - bridge_network
    depends_on:
      - postgres_db
    restart: on-failure

  g_scores_api:
    build:
      context: ./g-scores-api
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - SERVER_PORT=${SERVER_PORT}
      - FRONTEND_URL=${FRONTEND_URL}
    container_name: g_scores_api
    ports:
      - "3000:3000"
    networks:
      - bridge_network
    depends_on:
      - db_migrate

  g_scores:
    build:
      context: ./g-scores
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    container_name: g_scores
    ports:
      - "5173:5173"
    networks:
      - bridge_network
    depends_on:
      - g_scores_api

  nginx:
    image: nginx:latest
    container_name: proxy_server
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - bridge_network
    depends_on:
      - g_scores
      - g_scores_api



volumes:
  pg-data:



networks:
  bridge_network:
    driver: bridge
